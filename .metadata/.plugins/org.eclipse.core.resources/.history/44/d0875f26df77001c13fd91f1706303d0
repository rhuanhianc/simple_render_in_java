package frame;
import java.awt.*;
import java.awt.geom.Path2D;
import java.util.ArrayList;
import java.util.List;

import javax.swing.*;

import forms.Triangle;
import matrix.Matrix;
import vertex.Vertex;



public class FrameClass {
    
    public Container conteiner(Container contentPane){
        contentPane.setLayout(new BorderLayout());
  
        JSlider horizontalSlider = new JSlider(JSlider.HORIZONTAL, 0, 360, 100);
        contentPane.add(horizontalSlider, BorderLayout.SOUTH);
      
        JSlider verticalSlider = new JSlider(JSlider.VERTICAL, -90, 90, 0);
        contentPane.add(verticalSlider, BorderLayout.EAST);
     
        JPanel renderPanel = new JPanel(){
          /**
			 * 
			 */
			private static final long serialVersionUID = 1L;

		public void paintComponent(Graphics graphics){
              Graphics2D g2d = (Graphics2D) graphics;
              g2d.translate(getWidth() / 2, getHeight() / 2);
              g2d.setColor(Color.BLACK);
              double heading = Math.toRadians(horizontal.getValue());
          	
          	Matrix transform = new Matrix(new double[] {
          	        Math.cos(heading), 0, -Math.sin(heading),
          	        0, 1, 0,
          	        Math.sin(heading), 0, Math.cos(heading)
          	    });
              List<Triangle> triangle = new ArrayList<>();
              triangle.add(new Triangle(new Vertex(100, 100, 100),
                            new Vertex(-100, -100, 100),
                            new Vertex(-100, 100, -100),
                            Color.WHITE));
              triangle.add(new Triangle(new Vertex(100, 100, 100),
                            new Vertex(-100, -100, 100),
                            new Vertex(100, -100, -100),
                            Color.RED));
             triangle.add(new Triangle(new Vertex(-100, 100, -100),
                            new Vertex(100, -100, -100),
                            new Vertex(100, 100, 100),
                            Color.GREEN));
             triangle.add(new Triangle(new Vertex(-100, 100, -100),
                            new Vertex(100, -100, -100),
                            new Vertex(-100, -100, 100),
                            Color.BLUE));
             g2d.setColor(Color.WHITE);
             for (Triangle t : triangle) {
          	   Vertex v1 = transform.transform(t.v1);
          	    Vertex v2 = transform.transform(t.v2);
          	    Vertex v3 = transform.transform(t.v3);
          	    Path2D path = new Path2D.Double();
          	    path.moveTo(v1.x, v1.y);
          	    path.lineTo(v2.x, v2.y);
          	    path.lineTo(v3.x, v3.y);
          	    path.closePath();
          	    g2d.draw(path);}
       }
          }
        };
        verticalSlider.addChangeListener(e -> renderPanel.repaint());
        horizontalSlider.addChangeListener(e -> renderPanel.repaint());
        contentPane.add(renderPanel, BorderLayout.CENTER);
        return contentPane;
    }

}
